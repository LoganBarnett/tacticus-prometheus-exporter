/*
 * Tacticus API
 *
 * This API provides read only access to various game related data.
 *
 * The version of the OpenAPI document: 0.1 BETA
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UnitItem : equipped items of character
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UnitItem {
    #[serde(rename = "slotId")]
    pub slot_id: SlotId,
    #[serde(rename = "level")]
    pub level: i32,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "rarity", skip_serializing_if = "Option::is_none")]
    pub rarity: Option<Rarity>,
}

impl UnitItem {
    /// equipped items of character
    pub fn new(slot_id: SlotId, level: i32, id: String) -> UnitItem {
        UnitItem {
            slot_id,
            level,
            id,
            name: None,
            rarity: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SlotId {
    #[serde(rename = "Slot1")]
    Slot1,
    #[serde(rename = "Slot2")]
    Slot2,
    #[serde(rename = "Slot3")]
    Slot3,
}

impl Default for SlotId {
    fn default() -> SlotId {
        Self::Slot1
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Rarity {
    #[serde(rename = "Common")]
    Common,
    #[serde(rename = "Uncommon")]
    Uncommon,
    #[serde(rename = "Rare")]
    Rare,
    #[serde(rename = "Epic")]
    Epic,
    #[serde(rename = "Legendary")]
    Legendary,
}

impl Default for Rarity {
    fn default() -> Rarity {
        Self::Common
    }
}

