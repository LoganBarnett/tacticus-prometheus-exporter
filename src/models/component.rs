/*
 * Tacticus API
 *
 * This API provides read only access to various game related data.
 *
 * The version of the OpenAPI document: 0.1 BETA
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Component {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "grandAlliance")]
    pub grand_alliance: GrandAlliance,
    #[serde(rename = "amount")]
    pub amount: i32,
}

impl Component {
    pub fn new(name: String, grand_alliance: GrandAlliance, amount: i32) -> Component {
        Component {
            name,
            grand_alliance,
            amount,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GrandAlliance {
    #[serde(rename = "Imperial")]
    Imperial,
    #[serde(rename = "Xenos")]
    Xenos,
    #[serde(rename = "Chaos")]
    Chaos,
}

impl Default for GrandAlliance {
    fn default() -> GrandAlliance {
        Self::Imperial
    }
}

