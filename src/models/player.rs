/*
 * Tacticus API
 *
 * This API provides read only access to various game related data.
 *
 * The version of the OpenAPI document: 0.1 BETA
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Player {
    #[serde(rename = "details")]
    pub details: Box<models::PlayerDetails>,
    #[serde(rename = "units")]
    pub units: Vec<models::Unit>,
    #[serde(rename = "inventory")]
    pub inventory: Box<models::Inventory>,
    #[serde(rename = "progress")]
    pub progress: Box<models::Progress>,
}

impl Player {
    pub fn new(details: models::PlayerDetails, units: Vec<models::Unit>, inventory: models::Inventory, progress: models::Progress) -> Player {
        Player {
            details: Box::new(details),
            units,
            inventory: Box::new(inventory),
            progress: Box::new(progress),
        }
    }
}

